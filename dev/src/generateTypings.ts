import {promises} from 'fs';
import {join as joinPaths} from 'path';
import {unitFamilies} from '../../src';
import {typeNameFromUnit} from './util';
const {writeFile} = promises;

let file: string[] = ['// THIS IS AN AUTOGENERATED FILE, DO NOT EDIT MANUALLY'];

for (let [family, definition] of Object.entries(unitFamilies)) {
	file.push(
		`export type ${typeNameFromUnit(family)} = ${[definition.base.flat(), definition.conversions.flatMap(conversion => conversion.aliases.flat())]
			.flat()
			.map(alias => `'${alias}'`)
			.join(' | ')}`
	);
}

file.push(
	`export type AllUnits = ${Object.keys(unitFamilies)
		.map(unitFamily => typeNameFromUnit(unitFamily))
		.join(' | ')};\n`
);

writeFile(joinPaths(__dirname, '..', '..', 'types', 'units.d.ts'), file.join('\n'));
